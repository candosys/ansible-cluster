---
- hosts: localhost
  vars:
    docker_userid: "lgueye"
    data_hostname: "cluster-data"
    data_port: 3306
    data_alias: "db"
    data_image_name: "{{docker_userid}}/{{data_hostname}}"
    db_name: "cluster-data"
    db_user: "cluster-app"
    db_admin_user: "root"
    index_hostname: "cluster-index"
    index_discovery_port: 9300
    index_http_port: 9200
    index_alias: "index"
    index_image_name: "{{docker_userid}}/{{index_hostname}}"
    es_cluster_name: "{{index_hostname}}"
    es_mlockall: true
    app_hostname: "cluster-app"
    app_alias: "app"
    app_image_name: "{{docker_userid}}/{{app_hostname}}"
    app_port: 8080
    app_container_basedir: "/opt/service"

  tasks:
  - name: interpolate data-vars.yml.j2
    template: src=data/data-vars.yml.j2 dest=data/data-vars.yml

  - name: create data image
    docker_image: path="data" name={{data_image_name}}  state=present

  - name: run data container
    docker: name="{{ data_hostname }}" hostname="{{ data_hostname }}" image={{data_image_name}} ports="{{data_port}}" command="/usr/bin/mysqld_safe" state=running

  - name: interpolate index-vars.yml.j2
    template: src=index/index-vars.yml.j2 dest=index/index-vars.yml

  - name: create index image
    docker_image: path="index" name="{{index_image_name}}" state=present

  - name: run index container
    docker: name="{{ index_hostname }}" hostname="{{ index_hostname }}" image="{{index_image_name}}" ports="{{index_http_port}},{{index_discovery_port}}" command="/usr/share/elasticsearch/bin/elasticsearch -Des.default.config=/etc/elasticsearch/elasticsearch.yml -Des.default.path.home=/usr/share/elasticsearch -Des.default.path.logs=/var/log/elasticsearch -Des.default.path.data=/var/lib/elasticsearch -Des.default.path.work=/tmp/elasticsearch -Des.default.path.conf=/etc/elasticsearch" state=running

  - name: interpolate app/service/cluster-app.yml.j2
    template: src=app/service/cluster-app.yml.j2 dest=app/service/cluster-app.yml

  - name: create app image
    docker_image: path="app/service" name="{{app_image_name}}" state=present

  - name: run app container
    docker: name="{{ app_hostname }}" hostname={{ app_hostname }} image="{{ app_image_name }}" links={{data_hostname}}:{{data_alias}},{{index_hostname}}:{{index_alias}} volumes="{{ basedir }}/app/service:{{app_container_basedir}}" command="java -jar {{app_container_basedir}}/target/cluster-app.jar --spring.config.name=cluster-app --spring.config.location={{app_container_basedir}}/" expose="{{ app_port }}" state=running

  - name: pause 5 seconds
    pause: seconds=5

  - name: save app IP adress
    set_fact: "app-ip={{item.NetworkSettings.IPAddress}}"
    with_items: docker_containers

  - name: interpolate app/tests/cluster-tests.properties.j2
    template: src=app/tests/cluster-tests.properties.j2 dest=app/tests/cluster-tests.properties

#  - name: stop app container
#    docker: name="{{ app_hostname }}" image="{{ app_image_name }}" state=absent
#
#  - name: delete app image
#    docker_image: path="app" name="{{ app_image_name }}" state=absent
#
#  - name: stop index container
#    docker: name="{{ index_hostname }}" image="{{ index_image_name }}" state=absent
#
#  - name: delete index image
#    docker_image: path="index" name="{{ index_image_name }}" state=absent
#
#  - name: stop data container
#    docker: name="{{ data_hostname }}" image="{{ data_image_name }}" state=absent
#
#  - name: delete data image
#    docker_image: path="data" name="{{ data_image_name }}" state=absent
